#!/bin/bash

# @Note <Yavor>: This is a two column layout for GDB. On the left, we have the
# source code and on the right are the registers, watch window, etc.
gdb-tmux() {
    local control_window_id="$(tmux display-message -p '#{pane_id}')"
    local control_window_tty="$(tmux display-message -p -t "$control_window_id" '#{pane_tty}')"

    local source_window_id="$(tmux split-pane -hPF "#D" "tail -f /dev/null")"
    local source_window_tty="$(tmux display-message -p -t "$source_window_id" '#{pane_tty}')"

	# @Note <Yavor>: This just puts the source window on the left instead of the right.
    tmux swap-pane -s "$control_window_id" -t "$source_window_id"

    local output_pane_id="$(tmux split-pane -t "$control_window_id" -vPF "#D" "echo 'Program output:\n---------------\n\n'; tail -f /dev/null")"
    local output_pane_tty="$(tmux display-message -p -t "$output_pane_id" '#{pane_tty}')"
    local left_pane_height="$(tmux display-message -p -t "$control_window_id" '#{pane_height}')"
	tmux resize-pane -t "$output_pane_id" -y "$((40*left_pane_height/100))"
	tmux select-pane -T "$@"

	tmux select-pane -t "$source_window_id" -T "gdb-source"

	tmux select-pane -t "$control_window_id"
	tmux select-pane -T "gdb"
    local source_pane_height="$(tmux display-message -p -t "$source_window_id" '#{pane_height}')"
    gdb                                                           \
        -ex "dashboard source -output $source_window_tty"         \
        -ex "dashboard -output $control_window_tty"               \
		-ex "tty $output_pane_tty"                                \
		-ex "dash source -style height $((source_pane_height-1))" \
		-ex "start"                                               \
        "$@"

    # @Note <Yavor>: This cleans up the pane when we're done with gdb.
    #
    # Tmux always doesn't return panes to their original sizes when you close a pane
    # if there is more than one pane in a window. For example, if you have 1 pane
    # with an editor open, and you run this command, you would have 3 panes as a result:
    #
    #   1. One for the editor              - 1/3 the size of the window
    #   2. One for the gdb code listing    - 1/4 the size of the window
    #   3. One for the other gdb dashboard - 1/4 the size of the window
    #   windows.
    #
    # When you close one of the gdb panes, the other gdb pane would remain at
    # its original size instead of resizing to take the rest of the screen space,
    # so you end up getting:
    #
    #   1. Editor pane           - 3/4 the size of the window
    #   2. Original pane for gdb - 1/4 size of the window
    #
    # Instead, we want tmux to return to the original layout:
    #   1. Editor pane           - 1/2 the size of the window
    #   2. Original pane for gdb - 1/2 the size of the window
    #
    local left_pane_width="$(tmux display-message -p -t "$control_window_id" '#{pane_width}')"
    local right_pane_width="$(tmux display-message -p -t "$source_window_id" '#{pane_width}')"
    local total_width=$(($left_pane_width+$right_pane_width))
    tmux kill-pane -t "$source_window_id"
    tmux kill-pane -t "$output_pane_id"
    tmux resize-pane -t "$control_window_id" -x "$total_width"
}

gdb-tmux "$@"
